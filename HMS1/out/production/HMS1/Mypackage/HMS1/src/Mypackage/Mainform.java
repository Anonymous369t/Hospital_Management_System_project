package Mypackage;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

// here MAINFORM is our class conaning all java swing codes
public class Mainform extends JFrame {

    public JPanel Mainpannel;
    private JTextArea l5TextArea;
    private JButton viewPrescriptionButton;
    private JButton logoutButton;
    private JButton viewDoctorButton;
    private JButton createUserButton;
    private JButton createChannelButton;
    private JButton viewChannelButton;
    private JButton createIteemButton;
    private JButton doctorButton;
    private JButton patientButton;
    public JLabel jLabel4;
    public JLabel jLabel5;
    private JButton btnclick;
    private Container Main;

    // making a constructor
    public Mainform() {
        patientButton.addActionListener(new ActionListener() { // adding a action listener to patient butten
            @Override // method overriding (_runtime polymorphism)
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(btnclick, patientButton.getText() + "Hello1");
            }
        });
        createUserButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                User u = new User();// creating a object of user page
                // u.connect();
                u.setVisible(true); // when you click on create user button it will direct to user page
                u.setContentPane(u.panel2);
                u.setTitle("New user");
                u.setSize(400, 400);
                u.setVisible(true);//to be visible the pannel
                u.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            }
        });

        doctorButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(btnclick, "In progress");
            }
        });
    }


//    public static void main(String[] args) {  // Describing the pop-up window
//
//        Mainform h = new Mainform();
//        h.setContentPane(h.Mainpannel);
//        h.setTitle("Main Form");
//        h.setSize(400, 400);
//        h.setVisible(true);//to be visible the pannel
//        h.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);//TO EXIT THE PANNEL
//
//
//    }

    int newid;
    String uname;
    String usertypee;


    public Mainform(int id, String username, String usertype) {

        this.uname = username;
        System.out.println(username);
        jLabel4.setText(uname);

        this.usertypee = usertype;
        jLabel5.setText(usertypee);

        this.newid = id;

        Mainform h = new Mainform();
        h.setContentPane(h.Mainpannel);
        h.setTitle("Main Form");
        h.setSize(400, 400);
        h.setVisible(true);//to be visible the pannel
        h.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);


        System.out.println(username);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        Mainpannel = new JPanel();
        Mainpannel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(10, 4, new Insets(0, 0, 0, 0), -1, -1));
        Mainpannel.setBackground(new Color(-5001038));
        l5TextArea = new JTextArea();
        Font l5TextAreaFont = this.$$$getFont$$$("JetBrains Mono", Font.BOLD, 18, l5TextArea.getFont());
        if (l5TextAreaFont != null) l5TextArea.setFont(l5TextAreaFont);
        l5TextArea.setRows(2);
        l5TextArea.setText("HOSPITAL MANAGEMENT SYSTEM");
        Mainpannel.add(l5TextArea, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        Mainpannel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(8, 1, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        viewPrescriptionButton = new JButton();
        Font viewPrescriptionButtonFont = this.$$$getFont$$$("Monospaced", Font.ITALIC, 12, viewPrescriptionButton.getFont());
        if (viewPrescriptionButtonFont != null) viewPrescriptionButton.setFont(viewPrescriptionButtonFont);
        viewPrescriptionButton.setText("View prescription");
        Mainpannel.add(viewPrescriptionButton, new com.intellij.uiDesigner.core.GridConstraints(8, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        logoutButton = new JButton();
        Font logoutButtonFont = this.$$$getFont$$$("Monospaced", Font.ITALIC, 12, logoutButton.getFont());
        if (logoutButtonFont != null) logoutButton.setFont(logoutButtonFont);
        logoutButton.setText("Logout");
        Mainpannel.add(logoutButton, new com.intellij.uiDesigner.core.GridConstraints(9, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        viewDoctorButton = new JButton();
        Font viewDoctorButtonFont = this.$$$getFont$$$("Monospaced", Font.ITALIC, 12, viewDoctorButton.getFont());
        if (viewDoctorButtonFont != null) viewDoctorButton.setFont(viewDoctorButtonFont);
        viewDoctorButton.setText("View Doctor");
        Mainpannel.add(viewDoctorButton, new com.intellij.uiDesigner.core.GridConstraints(7, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        createUserButton = new JButton();
        Font createUserButtonFont = this.$$$getFont$$$("Monospaced", Font.BOLD | Font.ITALIC, 19, createUserButton.getFont());
        if (createUserButtonFont != null) createUserButton.setFont(createUserButtonFont);
        createUserButton.setText("Create User");
        Mainpannel.add(createUserButton, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        createChannelButton = new JButton();
        Font createChannelButtonFont = this.$$$getFont$$$("Monospaced", Font.BOLD | Font.ITALIC, 19, createChannelButton.getFont());
        if (createChannelButtonFont != null) createChannelButton.setFont(createChannelButtonFont);
        createChannelButton.setText("Create channel");
        Mainpannel.add(createChannelButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        viewChannelButton = new JButton();
        Font viewChannelButtonFont = this.$$$getFont$$$("Monospaced", Font.BOLD | Font.ITALIC, 19, viewChannelButton.getFont());
        if (viewChannelButtonFont != null) viewChannelButton.setFont(viewChannelButtonFont);
        viewChannelButton.setText("View Channel");
        Mainpannel.add(viewChannelButton, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        createIteemButton = new JButton();
        Font createIteemButtonFont = this.$$$getFont$$$("Monospaced", Font.BOLD | Font.ITALIC, 19, createIteemButton.getFont());
        if (createIteemButtonFont != null) createIteemButton.setFont(createIteemButtonFont);
        createIteemButton.setText("Create Iteem");
        Mainpannel.add(createIteemButton, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        doctorButton = new JButton();
        Font doctorButtonFont = this.$$$getFont$$$("Monospaced", Font.BOLD | Font.ITALIC, 19, doctorButton.getFont());
        if (doctorButtonFont != null) doctorButton.setFont(doctorButtonFont);
        doctorButton.setText("Doctor");
        Mainpannel.add(doctorButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        patientButton = new JButton();
        Font patientButtonFont = this.$$$getFont$$$("Monospaced", Font.BOLD | Font.ITALIC, 19, patientButton.getFont());
        if (patientButtonFont != null) patientButton.setFont(patientButtonFont);
        patientButton.setText("Patient");
        Mainpannel.add(patientButton, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Main = new JPanel();
        Main.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        Mainpannel.add(Main, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("UserName");
        Main.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("UserType");
        Main.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        jLabel4 = new JLabel();
        jLabel4.setText("l4");
        Main.add(jLabel4, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        jLabel5 = new JLabel();
        jLabel5.setText("l5");
        Main.add(jLabel5, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        jLabel5.setLabelFor(l5TextArea);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return Mainpannel;
    }


/**
 * @noinspection ALL
 */
}


